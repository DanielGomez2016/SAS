
<div class="size" role="main">
    <div class="">
        <div class="page-title">
            <div class="title_left">
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>Controladores de Sistema</h2>
                        @*Crear nuevo acceso*@
                        <button id="college-new" type="button" class="btn btn-default pull-right btn-sm">
                            <i data-toggle="tooltip" data-placement="top" title="Nueva Escuela" class="fa fa-plus"></i>
                        </button>
                        <button id="college-i" type="button" class="btn btn-default pull-right btn-sm">
                            <i data-toggle="tooltip" data-placement="top" title="Importar Escuelas" class="fa fa-file-archive-o"></i>
                        </button>
                        <div class="clearfix"></div>
                        <ul class="nav navbar-right panel_toolbox"></ul>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <div id="listCollege"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="college-edit" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            @using (Html.BeginForm("CollegeSave", "College", FormMethod.Post))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Acceso</h4>
                </div>
                <div class="modal-body">
                    
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                    <button type="submit"
                            data-reset="true"
                            data-ajax="true"
                            class="btn btn-primary">
                        Guardar
                    </button>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal import-->
<div class="modal fade" id="college-import" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            @using (Html.BeginForm("CollegeSaveFile", "College", FormMethod.Post))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Importar Escuelas</h4>
                </div>
                <div class="modal-body">
                    <label>Archivo <span class="required">*</span></label>
                    <input type="file" name="file" class="form-control" />
                    <span class="help-block">Solo se aceptan archivos válidos en formato xls o xlsx y que no exceda de los 3Mb</span>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                    <button type="submit"
                            data-reset="true"
                            data-ajax="true"
                            class="btn btn-primary">
                        Guardar
                    </button>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts{
    
    <script>

        $(document).ready(function () {

            let options = [];

            for (var k in Enums.StatusCollege) {
                options.push({
                    value: Enums.StatusCollege[k].value,
                    description: Enums.StatusCollege[k].description
                });
            }

            let config = {
                class: 'table-striped table-bordered',
                columnas: [
                    { leyenda: 'Nombre Escuela', columna: 'Name', ordenable: true, filtro: true, class: 'text-center col-md-3 ' },
                    { leyenda: 'C.C.T', columna: 'Code', filtro: true, ordenable: true, class: 'text-center col-md-2'  },
                    { leyenda: 'Localidad', columna: 'Locality', filtro: true, class: 'text-center col-md-2' },
                    { leyenda: 'Nivel Educativo', columna: 'EducationLevel', class: 'text-center col-md-2' },
                    { leyenda: 'Acciones', class: 'text-center col-md-3'  },
                ],
                modelo: [
                    { propiedad: 'Name' },
                    { propiedad: 'Code' },
                    { propiedad: 'Locality' },
                    { propiedad: 'EducationLevel' },
                    {
                        propiedad: 'Id', formato: function (tr, obj, value) {
                            let element = '';

                            if (obj.Status === 0) {
                                element = '<button value="' + value + '" data-status="' + obj.Status + '" type="button" class=" btn btn-success access-status"><i class="fa fa-check"></i></button>'
                            } else {
                                element = '<button value="' + value + '" data-status="' + obj.Status + '" type="button" class=" btn btn-warning access-status"><i class="fa fa-close"></i></button>'
                            }

                            element +=  '<button value="' + value + '" type="button" class="btn btn-primary access-edit"><i class="fa fa-edit"></i></button>';

                            return element;
                        }
                    },
                ],
                url: '@Url.Action("GetAllCollege", "College")',
                limite: [25, 50, 100],
                filtrable: true,
                paginable: true,
                columna: 'Id',
                columna_orden: 'ASC'
            };

            let grid = $("#listCollege").anexGrid(config);

            grid.tabla().on('click', '.college-edit', function () {
                let value = $(this).val();
                $("#college-edit").modal('show');
                $Vm.$emit('collegeSelectedId', value);
            })

            $("#college-new").click(function () {
                $("#college-edit").modal('show');
                $Vm.$emit('collegeSelectedId', 0);
            })

            $("#college-i").click(function () {
                $("#college-import").modal('show');
                $Vm.$emit('collegeSelectedId', 0);
            })


            //al cambiar tamaño de la pagina
            $(window).on("resize", resize);

            // y al cargar la página
            resize();

        })

        function resize() {
            var size = ($(window).height() - 10) + 'px'
            $(".size").attr("style","height:"+size+" !important");
        }
    </script>
}